{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","console","log","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b89ae9f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload,\n        ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? (contact = action.payload) : contact)\n      };\n    default:\n      return state;\n\n  }\n}\n\nexport class Provider extends Component {\n\n\n\n  state = {\n    // contacts: [\n    //   {\n    //     id: 1,\n    //     name: 'John Doe',\n    //     email: 'jdoe@gmail.com',\n    //     phone: '555-555-5555'\n    //   },\n    //   {\n    //     id: 2,\n    //     name: 'Karen Williams',\n    //     email: 'kwil@gmail.com',\n    //     phone: '555-555-6666'\n    //   },\n    //   {\n    //     id: 3,\n    //     name: 'Jack Johnson',\n    //     email: 'jjons@gmail.com',\n    //     phone: '555-555-7777'\n    //   }\n    // ],\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  // componentDidMount() {\n  //   axios.get('https://jsonplaceholder.typicode.com/users')\n  //     .then((resp) => {\n  //       this.setState({ contacts: resp.data })\n  //     })\n  // }\n\n  async componentDidMount() {\n    const res = await axios\n      .get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n\n  }\n\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n// import './contact.css';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (e) {\n      console.log('couldnt delete from json placeholder');\n    }\n\n\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n\n\n  };\n\n  render() {\n    const { name, email, phone, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={() =>\n                    this.setState({ showContactInfo: !this.state.showContactInfo })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n\n                <Link to={`contact/edit/${id}`}>\n                  <i className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  // email: PropTypes.string.isRequired,\n  // phone: PropTypes.string.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                />\n              ))}\n            </React.Fragment>\n\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    // remove from backend via fake call and then remove from fornt end\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n\n\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // send us to the contacts list page\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(\n                  this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n\n\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // send us to the contacts list page\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(\n                  this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n\n\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i>Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react'\n\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  }\n  componentDidMount() {\n    console.log('component did mount...');\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      }));\n  }\n  // componentWillMount() {\n  //   console.log('component about to mount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('component did update...');\n  // }\n\n  // this is depracated\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('component will receive props...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapSHotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <h1>{body}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}